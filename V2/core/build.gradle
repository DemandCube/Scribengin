archivesBaseName = 'scribengin.core'

eclipse {
  project {
    name = 'scribengin.core'
  }
}

repositories {
  mavenLocal()
  mavenCentral()
}

configurations.all {
  exclude(group: 'ring', module: 'ring-core')
  exclude(group: 'storm', module: 'storm')
}

dependencies {
  compile project(':registry')
  compile project(':kafka')
  compile project(':vm')

  compile group: 'com.neverwinterdp', name: 'commons.utils', version: '1.0-SNAPSHOT'

  compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.4.3'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.4.3'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.4.3'
  compile group: 'com.google.guava',           name: 'guava', version: '18.0'
  compile 'com.amazonaws:aws-java-sdk:1.9.6'
  
  compile group: 'junit', name: 'junit', version: '4.11'
}

task release (dependsOn: 'build') << {
  def releaseDir = "${buildDir}/release/Scribengin.V2"
  doRelease(releaseDir) ;
}

def doRelease(String releaseDir) {
  println "\n\n"
  println "*************************************************"
  println "Preparing the release directory ${releaseDir}"
  println "*************************************************"

  def dependencyJars = [ 
    "commons.utils", "commons.api", "commons.buffer", "commons.yara",
    "commons.hadoop-framework", "commons.zookeeper", 
    
    "scribengin.server", "scribengin.registry", "scribengin.vm", "scribengin.core", 

    "jackson-core-2.4.3", "jackson-databind-2.4.3", "jackson-annotations-2.4.3", "jackson-datatype-protobuf", 
    "jcommander", "reflections", "guava-13.0", "javassist",
    'guice', 'javax.inject', 'hazelcast', 'aopalliance',
    "kafka", "scala-library",
    'zookeeper', 'zkclient',
    "netty-all", 'jzlib', 
    'chronicle', "lang-6.4.6", "compiler-2.2.0",
    
    "hadoop-common", "hadoop-hdfs", "hadoop-auth", 
    "hadoop-yarn-api", "hadoop-yarn-common", "hadoop-yarn-client",
    "protobuf",

    //codahale metric is required by kafka
    "metrics-core-2.2.0",
    "commons-collections", "commons-configuration","commons-lang3-3.1", "commons-lang-2.6", "commons-cli","httpcore-4.3.3",
    "log4j", "slf4j-api", "slf4j-log4j12", "commons-logging",
    "junit-4.11"
  ] ;

  println "Copy the dependency library"
  configurations.compile.each { File file -> 
    if(isIn(dependencyJars, file)) {
      println "  Copy $file.name to NeverwinterDP/libs"
      copy {
        from file
        into "${releaseDir}/libs"
      }
    } else {
      //println "Ignore $file.name "
    }
  }

  copy {
    from "${buildDir}/libs"
    into "${releaseDir}/libs"
  }

  println "Copy and override app"
  copy {
    from "src/app"
    into "${releaseDir}"
  }

  println "Copy and override webapp"
  copy {
    from "src/main/webapp"
    into "${releaseDir}/webapp"
  }
}

def isIn(set, File file) {
  for(item in set) {
    if(file.name.startsWith(item)) return true ;
  }
  return false ;
}
