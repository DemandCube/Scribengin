archivesBaseName = 'scribengin.release'

eclipse {
  project {
    name = 'scribengin.release'
  }
}

repositories {
  mavenLocal()
  mavenCentral()
}

test {
  exclude '**'
}

configurations {
  scribenginDeployJars {
    transitive = false
  }

  dataflowDeployJars {
    transitive = false
  }

  jvmagenDeployJars {
    transitive = false
  }
}

configurations.all {
  exclude(group: 'ring', module: 'ring-core')
  exclude(group: 'storm', module: 'storm')
  
  //This is because hadoop uses and older version of jetty,
  //and the proxy server needs version 3
  //exclude(group: 'javax.servlet', name: 'servlet-api', version: '2.5')
  
  resolutionStrategy {
    force 'com.google.guava:guava:13.0'
  }
}

dependencies {
  compile project(':core')
  compile project(':dataflow/hdfs')

  compile group: 'junit', name: 'junit', version: '4.11'

  /*************************Scribengin runtime deploy jars***************************/
  scribenginDeployJars project(':server')
  scribenginDeployJars project(':vm')
  scribenginDeployJars project(':registry')
  scribenginDeployJars project(':core')
  scribenginDeployJars group: 'com.neverwinterdp', name: 'commons.api', version: '1.0-SNAPSHOT'
  scribenginDeployJars group: 'com.neverwinterdp', name: 'commons.hadoop-framework', version: '1.0-SNAPSHOT'
  scribenginDeployJars group: 'com.neverwinterdp', name: 'commons.utils', version: '1.0-SNAPSHOT'
  scribenginDeployJars group: 'com.neverwinterdp', name: 'commons.yara.core', version: '1.0-SNAPSHOT'


  scribenginDeployJars group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.4.3'
  scribenginDeployJars group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.4.3'
  scribenginDeployJars group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.4.3'
  scribenginDeployJars group: 'com.hubspot.jackson', name: 'jackson-datatype-protobuf', version: '0.6.0'

  scribenginDeployJars group: 'aopalliance', name: 'aopalliance', version: '1.0'
  scribenginDeployJars group: 'commons-cli', name: 'commons-cli', version: '1.2'
  scribenginDeployJars group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
  scribenginDeployJars group: 'commons-configuration', name: 'commons-configuration', version: '1.6'
  scribenginDeployJars group: 'commons-lang', name: 'commons-lang', version: '2.6'
  scribenginDeployJars group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
  scribenginDeployJars group: 'commons-logging', name: 'commons-logging', version: '1.1.3'


  scribenginDeployJars group: 'com.google.guava', name: 'guava', version: '13.0'
  scribenginDeployJars group: 'com.google.inject', name: 'guice', version: '3.0'
  scribenginDeployJars group: 'com.google.inject.extensions', name: 'guice-multibindings', version: '3.0'
  scribenginDeployJars group: 'com.google.inject.extensions', name: 'guice-servlet', version: '3.0'
  scribenginDeployJars group: 'org.apache.hadoop', name: 'hadoop-auth', version: '2.4.0'
  scribenginDeployJars group: 'org.apache.hadoop', name: 'hadoop-common', version: '2.4.0'
  scribenginDeployJars group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: '2.4.0'
  scribenginDeployJars group: 'org.apache.hadoop', name: 'hadoop-yarn-api', version: '2.4.0'
  scribenginDeployJars group: 'org.apache.hadoop', name: 'hadoop-yarn-client', version: '2.4.0'
  scribenginDeployJars group: 'org.apache.hadoop', name: 'hadoop-yarn-common', version: '2.4.0'
  scribenginDeployJars group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.4.6'
  scribenginDeployJars group: 'com.101tec', name: 'zkclient', version: '0.3'

  scribenginDeployJars group: 'org.javassist', name: 'javassist', version: '3.16.1-GA'
  scribenginDeployJars group: 'javax.inject', name: 'javax.inject', version: '1'
  scribenginDeployJars group: 'com.beust', name: 'jcommander', version: '1.35'
  scribenginDeployJars group: 'junit', name: 'junit', version: '4.11'
  scribenginDeployJars group: 'org.apache.kafka', name: 'kafka-clients', version: '0.8.2.0'
  scribenginDeployJars group: 'org.apache.kafka', name: 'kafka_2.10', version: '0.8.2.0'
  scribenginDeployJars group: 'log4j', name: 'log4j', version: '1.2.17'
  scribenginDeployJars group: 'com.yammer.metrics', name: 'metrics-core', version: '2.2.0'
  scribenginDeployJars group: 'com.mycila.guice', name: 'mycila-guice-all', version: '3.2.ga'
  scribenginDeployJars group: 'io.netty', name: 'netty-all', version: '4.0.23.Final'
  scribenginDeployJars group: 'com.google.protobuf', name: 'protobuf-java', version: '2.6.0'
  scribenginDeployJars group: 'org.reflections', name: 'reflections', version: '0.9.9-RC1'
  scribenginDeployJars group: 'org.scala-lang', name: 'scala-library', version: '2.10.4'


  scribenginDeployJars group: 'org.slf4j', name: 'slf4j-api', version: '1.7.6'
  scribenginDeployJars group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.5'

}

task release (dependsOn: 'build') << {
  def releaseDir = "${buildDir}/release"
  doReleaseScribengin("${releaseDir}/scribengin");

  def hdfsDataflowLibs = [ "scribengin.dataflow.hdfs" ] ;
  def descriptor = "src/dataflows/hdfs/dataflow.json" ;
  doReleaseDataflow("hdfs", "${releaseDir}", hdfsDataflowLibs, descriptor);
}

def doReleaseScribengin(String releaseDir) {
  println "\n\n"
  println "*************************************************"
  println "Build release VMMaster ${releaseDir}"
  println "*************************************************"

  def dependencyJars = [ 
    "commons.utils", "commons.api", "commons.buffer", "commons.yara",
    "commons.hadoop-framework", "commons.zookeeper", 
    
    "scribengin.server", "scribengin.registry", "scribengin.vm", "scribengin.core", 

    "jackson-core-2.4.3", "jackson-databind-2.4.3", "jackson-annotations-2.4.3", "jackson-datatype-protobuf", 
    //"jcommander", "reflections", "guava-16.0.1", "javassist",
    "jcommander", "reflections", "guava-13.0", "mycila-guice-all", "javassist",
    'guice', 'javax.inject', 'hazelcast', 'aopalliance',
    "kafka", "scala-library",
    'zookeeper', 'zkclient',
    "netty-all", 'jzlib', 
    'chronicle', "lang-6.4.6", "compiler-2.2.0",
    
    "hadoop-common", "hadoop-hdfs", "hadoop-auth", 
    "hadoop-yarn-api", "hadoop-yarn-common", "hadoop-yarn-client",
    "protobuf",

    //codahale metric is required by kafka
    "metrics-core-2.2.0",
    "commons-collections", "commons-configuration","commons-lang3-3.1", "commons-lang-2.6", "commons-cli",
    "log4j", "slf4j-api", "slf4j-log4j12", "commons-logging",
    "junit-4.11"
  ] ;

  println "Copy the dependency library"
  configurations.scribenginDeployJars.each { File file -> 
    copy {
      from file
      into "${releaseDir}/libs"
    }
  }

  /**
  configurations.compile.each { File file -> 
    if(isIn(dependencyJars, file)) {
      println "  Copy $file.name to NeverwinterDP/libs"
      copy {
        from file
        into "${releaseDir}/libs"
      }
    } else {
      //println "Ignore $file.name "
    }
  }
  */

  copy {
    from "${buildDir}/libs"
    into "${releaseDir}/libs"
  }

  println "Copy and override app"
  copy {
    from "src/app"
    into "${releaseDir}"
  }
}

def doReleaseDataflow(String name, String releaseDir, def libs, descriptor) {
  println "\n\n"
  println "*************************************************"
  println "Build release for the dataflow ${name}"
  println "*************************************************"

  println "Copy the dependency library"
  configurations.compile.each { File file -> 
    if(isIn(libs, file)) {
      println "  Copy $file.name to ${releaseDir}/dataflows/${name}/libs"
      copy {
        from file
        into "${releaseDir}/dataflows/${name}/libs"
      }
    }
  }

  copy {
    from descriptor
      into "${releaseDir}/dataflows/${name}"
  }
}

def isIn(set, File file) {
  for(item in set) {
    if(file.name.startsWith(item)) return true ;
  }
  return false ;
}
