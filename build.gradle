apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

archivesBaseName = 'scribengin'

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

eclipse {
  classpath {
    downloadSources=true
  }
}


eclipse.classpath.defaultOutputDir = file( 'build/classes' )

group = 'com.neverwinterdp'
sourceCompatibility = 1.7
version = '1.0-SNAPSHOT'
configurations.compile.transitive = true

repositories {
  mavenLocal()
  mavenCentral()
}


dependencies {
  compile group: 'org.apache.kafka', name: 'kafka_2.10', version:'0.8.1.1'
  compile group: 'com.beust', name: 'jcommander', version:'1.30'
  compile group: 'org.apache.hadoop', name: 'hadoop-client', version:'2.2.0'
  compile group: 'org.apache.hadoop', name: 'hadoop-common', version:'2.2.0'
  compile group: 'org.apache.hadoop', name: 'hadoop-yarn-client', version:'2.2.0'
  compile group: 'org.apache.hadoop', name: 'hadoop-minicluster', version:'2.2.0'
  compile group: 'com.google.code.gson', name: 'gson', version:'2.2.4'

  compile group: 'com.neverwinterdp', name: 'commons.utils', version: '1.0-SNAPSHOT'
  compile group: 'com.neverwinterdp', name: 'commons.api', version: '1.0-SNAPSHOT'
  compile group: 'com.neverwinterdp', name: 'commons.cluster', version: '1.0-SNAPSHOT'
  compile group: 'com.neverwinterdp', name: 'commons.zookeeper', version: '1.0-SNAPSHOT'


  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
  compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.5'

  testCompile group: 'junit', name: 'junit', version: '4.11'
}

test {
  forkEvery = 1

  testLogging {
    events "passed", "skipped", "failed"
  }
}

task release (dependsOn: 'build') << {
  def releaseDir = "${buildDir}/release/Scribengin"
  doRelease(releaseDir) ;
}

def doRelease(String releaseDir) {
  println "\n\n"
  println "*************************************************"
  println "Preparing the release directory ${releaseDir}"
  println "*************************************************"

  println "Copy the scripts"
  copy {
    from "src/app"
    into "${releaseDir}"
  }

  def jars = [
    "lib.common", "test-framework", "queuengin",
    "jackson-core-asl", "jackson-mapper-asl",
    "kafka", "scala-library", "zkclient", "zookeeper",
    "log4j", "slf4j-api", "slf4j-simple", "slf4j-log4j12",
    "metrics-core", "metrics-annotation"
  ]

  println "Copy the dependency library"
  project(':sparkngin').configurations.compile.each { File file ->
    if(isIn(jars, file)) {
      println "  Copy $file.name to Scribengin/libs"
      copy {
        from file
        into "${releaseDir}/libs"
      }
    } else {
      //println "Ignore $file.name "
    }
  }

  copy {
    from "${buildDir}/libs"
    into "${releaseDir}/libs"
  }
}

def isIn(set, File file) {
  for(item in set) {
    if(file.name.startsWith(item)) return true ;
  }
  return false ;
}
